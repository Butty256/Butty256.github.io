---
import { type CollectionEntry, getCollection } from "astro:content";
import BaseLayout from "../../layouts/BaseLayout.astro";
import FormattedDate from "../../components/FormattedDate.astro";
import AdjustText from "../../components/AdjustText.astro";
import { PUBLISHED_DATE_LABEL, UPDATED_DATE_LABEL } from "../../consts";

type Props = CollectionEntry<"posts">;

export async function getStaticPaths() {
	const posts = await getCollection("posts");
	return posts.map((post) => ({
		params: { slug: post.slug },
		props: post,
	}));
}

const post = Astro.props;
const { Content } = await post.render();
---

<>
	<BaseLayout title={post.data.title} description={post.data.description}>
		<article>
			<h1 class="title">
				<AdjustText text={post.data.title} />
			</h1>
			<div class="date">
				<div>
					<AdjustText text={PUBLISHED_DATE_LABEL} />
					<FormattedDate date={post.data.publishedDate} />
				</div>
				{
					post.data.updatedDate && (
						<div class="updated">
							<AdjustText text={UPDATED_DATE_LABEL} />
							<FormattedDate date={post.data.updatedDate} />
						</div>
					)
				}
			</div>
			<div class="tags">
				{
					post.data.tags &&
						post.data.tags.map((tag) => (
							<a class="tag" href={`/tags/${tag.id}`}>
								<AdjustText text={tag.name} />
							</a>
						))
				}
			</div>
			<Content />
		</article>
	</BaseLayout>
</>

<style lang="scss">
	.title {
		font: $font-headline-large;
		margin-top: 24px;
	}

	.date {
		font: $font-label-medium;
		color: $color-on-background-variant;
		display: flex;
		margin-top: 4px;

		.updated {
			margin-left: 8px;
		}
	}

	.tags {
		font: $font-label-medium;
		margin: 2px -8px 32px 0;

		.tag {
			display: inline-block;
			margin-right: 8px;
			color: $color-primary;
		}
	}
</style>
